name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
        role-session-name: GitHubActions-${{ github.event.inputs.environment }}
        aws-region: eu-north-1
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Init
      working-directory: ./environments/${{ github.event.inputs.environment }}
      run: terraform init
    
    - name: Terraform Validate
      working-directory: ./environments/${{ github.event.inputs.environment }}
      run: terraform validate
    
    - name: Terraform Plan
      working-directory: ./environments/${{ github.event.inputs.environment }}
      run: terraform plan -no-color
      if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
    
    - name: Terraform Apply
      working-directory: ./environments/${{ github.event.inputs.environment }}
      run: terraform apply -auto-approve -no-color
      if: github.event.inputs.action == 'apply'
    
    - name: Terraform Destroy
      working-directory: ./environments/${{ github.event.inputs.environment }}
      run: terraform destroy -auto-approve -no-color
      if: github.event.inputs.action == 'destroy'
    
    - name: Output Infrastructure Details
      working-directory: ./environments/${{ github.event.inputs.environment }}
      run: |
        echo "## Infrastructure Outputs" >> $GITHUB_STEP_SUMMARY
        terraform output -no-color >> $GITHUB_STEP_SUMMARY
      if: github.event.inputs.action == 'apply'